import { expect } from 'chai';
import fs from 'fs';
import chakram from 'chakram';
const assert = chakram.expect;
import _ from 'lodash';
import frisby from 'frisby';
import path from 'path';

describe('Waterfall Penetration Tests', () => {

	const clientId = '28';
	const clientId_qa = '28';
	const clientId_qa_ui = '29';
	const clientId_qa_api = '30';
	const clientName_qa = 'QA';
	const restrictedClientId = '30';
	const restrictedClientName = 'QA_API';
	const restrictedEventId = '9d3f7f64-f5d9-42b9-b66a-8cacd4030e18';
	const restrictedWaterfallId = 'b042f4ff-b124-400b-a089-bbccd5c73b8e';
	const eventId2 = '6492e572-afe0-4210-8f48-4fd7fd40e489';
	const waterfallId_custom = '73863370-d99c-4425-9f9b-6dabff70b255';
	const waterfallName = 'Automation-DealByDeal';
	const waterfallId_totalreturn = '32043505-7f23-4a54-bfb0-a077bae4ff1a';
	const waterfallId_investran = '27b12995-853f-4974-9aed-cd2aa96a9497'; //'d5b95dfb-780d-4479-aae9-a0bbe2ad330a'; // <-- Use this for DEV
	const waterfallName_investran = 'Automation-Investran';
	let random_waterfallname = 'AutoBot-' + Math.random().toString(36).substring(8);
	let cdEventName = 'API-Event-' + Math.random().toString(36).substring(8);
	let udEventName = Math.random().toString(36).substring(8);
	const currency = 'USD';
	let token = {};
	let newEventId = '';


	it("Delete Waterfall - Controller Role", (done) => {
		fs.readFile('tokens.json', 'utf8', function readFileCallback(err, data) {
			if (err) {
				console.log(err);
			} else {
				token = JSON.parse(data);
				let config = {
					headers: {
						'clientId': clientId_qa,
						'waterfallId': waterfallId_custom,
						'Cookie': 'JWT=' + token.jwt + '; SMSESSION=' + token.smsession
					},
					body: {
						type: 'waterfalls',
						data: {
							attributes: {
								status: 'Pending Deletion'
							}
						}
					},
					strictSSL: false
				}

				chakram.put(token.url + `core/waterfalls/${clientId_qa}/${waterfallId_custom}`, undefined, config)
					.then(function (res) {
						assert(res).to.have.status(401);
					})
					.done(done);
			}
		});
	});

	it("EDIT Waterfall - Controller Role", (done) => {
		fs.readFile('tokens.json', 'utf8', function readFileCallback(err, data) {
			if (err) {
				console.log(err);
			} else {
				token = JSON.parse(data);
				let config = {
					headers: {

						'Cookie': 'JWT=' + token.jwt + '; SMSESSION=' + token.smsession
					},
					body: {
						type: 'waterfalls',
						data: {
							attributes: {
								'clientId': clientId_qa,
								'waterfallId': waterfallId_custom,
								"currency": "USD",
								"calculationResultsMethod": "SPECIFIC_INVESTOR_ID",
								"calculationMethod": "TOTAL_RETURN",
								"status": "In Progress",
								"createdBy": "CNanda",
								"name": "Automation-Custom",
								"updatedBy": "cwf_dev_tier2"
							}
						}
					},
					strictSSL: false
				}

				chakram.put(token.url + `core/waterfalls`, undefined, config)
					.then(function (res) {
						assert(res).to.have.status(401);
					})
					.done(done);
			}
		});
	});

});

