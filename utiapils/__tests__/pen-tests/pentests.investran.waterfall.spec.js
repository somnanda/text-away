import { expect } from 'chai';
import fs from 'fs';
import chakram from 'chakram';
const assert = chakram.expect;
import _ from 'lodash';
import frisby from 'frisby';
import path from 'path';

describe('Investran Linked Waterfall Creation', () => {
  const clientId = '30';
  let waterfallId = '';
  const waterfallName =
    'API-Bot-' +
    Math.random()
      .toString(36)
      .substring(8);
  let currency = 'USD';
  let token = {};

  it('Create a waterfall (Client - QA, User - cwf_dev_tier2)', done => {
    fs.readFile('tokens.json', 'utf8', function readFileCallback(err, data) {
      if (err) {
        console.log(err);
      } else {
        token = JSON.parse(data);
        let waterfallConfig = {
          headers: {
            'content-type': 'application/json',
            Cookie: 'JWT=' + token.jwt + '; SMSESSION=' + token.smsession,
          },
          body: {
            type: 'waterfalls',
            data: {
              attributes: {
                clientId: clientId,
                currency: currency,
                name: waterfallName,
                status: 'In Progress',
                calculationMethod: 'TOTAL_RETURN',
                reportingGroupUDF: 'Algebris - NPL',
              },
            },
          },
          strictSSL: false,
        };

        var json = JSON.stringify({});

        chakram
          .post(token.url + 'core/waterfalls', undefined, waterfallConfig)
          .then(function(res) {
            assert(res).to.have.status(401);
          })
          .done(done);
      }
    });
  });
});
